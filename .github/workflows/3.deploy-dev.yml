name: Deploy Dev Environment

on:
  workflow_run:
    workflows: ["End-to-End Tests"]
    types:
      - completed
  workflow_dispatch:

jobs:
  deploy-backend-dev:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Backend to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
        run: |
          cd bank-statements-api
          # Create fly.toml if it doesn't exist
          if [ ! -f fly.toml ]; then
            flyctl launch --no-deploy --name bank-statements-api-dev --region fra
          fi

          # Set secrets
          flyctl secrets set DATABASE_URL="${DATABASE_URL}" --app bank-statements-api-dev

          # Deploy
          flyctl deploy --app bank-statements-api-dev --strategy immediate

  deploy-frontend-dev:
    runs-on: ubuntu-latest
    needs: deploy-backend-dev
    steps:
      - uses: actions/checkout@v3

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy Frontend to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        run: |
          cd bank-statements-web
          # Create fly.toml if it doesn't exist
          if [ ! -f fly.toml ]; then
            flyctl launch --no-deploy --name bank-statements-web-dev --region fra
          fi

          # Set secrets
          flyctl secrets set VITE_API_URL="https://bank-statements-api-dev.fly.dev" --app bank-statements-web-dev

          # Deploy
          flyctl deploy --app bank-statements-web-dev --strategy immediate
